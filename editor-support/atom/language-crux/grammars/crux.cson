'scopeName': 'source.crux'
'name': 'Crux'
'fileTypes': ['cx']
'patterns': [
  {
    'match': '\\b(data|type|let|mutable|export|while|fun|for|in|if|return|match)\\b',
    'name': 'keyword.crux'
  },
  {
    'match': '[<=>\\+\\-;\\(\\)\\[\\]\{\}]',
    'name': 'keyword.operator.assignment.compound.js.crux'
  },
  {
      'match': '//.*',
      'name': 'comment.crux'
  },
  {
      'include': '#strings'
  }
  {
      'include': '#numbers'
  }
]
'repository':
  'numbers':
    'patterns': [
      {
        'match': '\\b((0(x|X)[0-9a-fA-F]+)|(0(b|B)[01]+)|(0(o|O)[0-7]+)|([0-9]+(\\.[0-9]+)?)((e|E)[+-]?[0-9]+)?)\\b'
        'name': 'constant.numeric.js'
      }
    ]
  'operators':
    'patterns': [
      {
        'match': '!=|!==|<=|>=|<<=|>>=|>>>=|\\*=|(?<!\\()/=|%=|\\+=|\\-=|&=|\\^=|!|%|&|\\*|/|\\-\\-|\\-|\\+\\+|\\+|~|===|==|=|<>|<|>|!|&&|\\|\\||\\?|\\:|\\^'
        'comment': 'match 2-character operator first'
        'name': 'keyword.operator.js'
      }
    ]
  'strings':
    'patterns': [
      {
        'begin': '\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.js'
        'end': '\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.js'
        'name': 'string.quoted.single.js'
        'patterns': [
          {
            'match': '\\\\(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)'
            'name': 'constant.character.escape.js'
          }
          {
            'match': "[^']*[^\\n\\r'\\\\]$"
            'name': 'invalid.illegal.string.js'
          }
        ]
      }
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.js'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.js'
        'name': 'string.quoted.double.js'
        'patterns': [
          {
            'match': '\\\\(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)'
            'name': 'constant.character.escape.js'
          }
          {
            'match': '[^"]*[^\\n\\r"\\\\]$'
            'name': 'invalid.illegal.string.js'
          }
        ]
      }
      {
        'begin': '`'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.js'
        'end': '`'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.js'
        'name': 'string.quoted.template.js'
        'patterns': [
          {
            'match': '\\\\(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)'
            'name': 'constant.character.escape.js'
          }
          {
            'include': '#interpolated_js'
          }
        ]
      }
    ]
