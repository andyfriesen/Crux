pragma { NoBuiltin }

import types(Boolean)

export let not<a>: a => Boolean = _unsafe_js(
  "function not(b) { return !b; }"
)

export let eq<a, b>: fun(a, b) -> Boolean = _unsafe_js(
  "function eq(lhs, rhs) { return lhs === rhs; }"
)

export let neq<a, b>: fun(a, b) -> Boolean = _unsafe_js(
  "function neq(lhs, rhs) { return lhs !== rhs; }"
)

export let lt<a, b>: fun(a, b) -> Boolean = _unsafe_js(
  "function lt(lhs, rhs) { return lhs < rhs; }"
)
