import assert

type Test = {
  name: String,
  fn: () => ()
}

let tests = mutable []

export fun test(name: String, fn) {
  tests->append({
    name: name,
    fn: fn,
  })
}

let VERBOSE = False

fun green(str) {
  return "\x1b[0;32m" + str + "\x1b[0m"
}

fun red(str) {
  return "\x1b[0;31m" + str + "\x1b[0m"
}

export fun run() {
  for t in tests->freeze() {
    if VERBOSE {
      print("test: " + t.name)
    }

    try {
      t.fn()
    }
    catch assert.AssertionError message {
      print(t.name + " " + red("FAILED") + ": " + message)
      // continue?
      print(red("fail ✗"))
      return
    }
  }
  print(green("pass ✔️"))
}

export let main = run
