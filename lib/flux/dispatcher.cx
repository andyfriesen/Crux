export data Dispatcher<action>({
  mutable currentToken: Number,
  callbacks: mutable [fun(action) -> ()],
})

data DispatchToken(Number)

export fun new<action>(): Dispatcher action {
  return Dispatcher({
    currentToken: 0,
    callbacks: mutable [],
  })
}

export fun register<action>(Dispatcher(self), callback: fun(action) -> ()): DispatchToken {
  self.callbacks->append(callback)

  self.currentToken = self.currentToken + 1
  return DispatchToken(self.currentToken)
}

fun unregister(Dispatcher(self), token: DispatchToken) {
  
}

export fun dispatch<action>(Dispatcher(self), action: action) {
  for cb in self.callbacks->freeze() {
    cb(action)
  }
}
