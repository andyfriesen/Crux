import assert
import test(...)

import js
import js.option
import js.unsafe

test("null is represented as JS null", () => {
    let a: option.JSOption<String> = option.none();
    assert.true(unsafe.eq(a, js.Null))
})

test("values are unwrapped", () => {
    let a = option.some("hello")
    assert.equal("hello", _unsafe_coerce(a))
})

test("eq", () => {
    let n: option.JSOption<String> = option.none()
    assert.equal(n, option.none())
    assert.notEqual(option.none(), option.some(""))
    assert.notEqual(option.some(""), option.none())
    assert.notEqual(option.some("1"), option.some("2"))
    assert.equal(option.some(""), option.some(""))
})
